apiVersion: apps/v1
kind: StatefulSet
metadata:
  generation: 1
  name: some-name-haproxy
  ownerReferences:
  - apiVersion: pxc.percona.com/v1
    controller: true
    kind: PerconaXtraDBCluster
    name: some-name
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: haproxy
      app.kubernetes.io/instance: some-name
      app.kubernetes.io/managed-by: percona-xtradb-cluster-operator
      app.kubernetes.io/name: percona-xtradb-cluster
      app.kubernetes.io/part-of: percona-xtradb-cluster
  serviceName: some-name-haproxy
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/component: haproxy
        app.kubernetes.io/instance: some-name
        app.kubernetes.io/managed-by: percona-xtradb-cluster-operator
        app.kubernetes.io/name: percona-xtradb-cluster
        app.kubernetes.io/part-of: percona-xtradb-cluster
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: haproxy
                app.kubernetes.io/instance: some-name
                app.kubernetes.io/managed-by: percona-xtradb-cluster-operator
                app.kubernetes.io/name: percona-xtradb-cluster
                app.kubernetes.io/part-of: percona-xtradb-cluster
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: PXC_SERVICE
          value: some-name-pxc
        - name: MONITOR_PASSWORD
          valueFrom:
            secretKeyRef:
              key: monitor
              name: my-cluster-secrets
        imagePullPolicy: Always
        name: haproxy
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        - containerPort: 3307
          name: mysql-replicas
          protocol: TCP
        - containerPort: 3309
          name: proxy-protocol
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/haproxy-custom/
          name: haproxy-custom
        - mountPath: /etc/haproxy/pxc
          name: haproxy-auto
      - args:
        - /usr/bin/peer-list
        - -on-change=/usr/bin/add_pxc_nodes.sh
        - -service=$(PXC_SERVICE)
        env:
        - name: PXC_SERVICE
          value: some-name-pxc
        - name: MONITOR_PASSWORD
          valueFrom:
            secretKeyRef:
              key: monitor
              name: my-cluster-secrets
        imagePullPolicy: Always
        name: pxc-monit
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/haproxy-custom/
          name: haproxy-custom
        - mountPath: /etc/haproxy/pxc
          name: haproxy-auto
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.alpha.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 6000
      volumes:
      - configMap:
          defaultMode: 420
          name: some-name-haproxy
          optional: true
        name: haproxy-custom
      - emptyDir: {}
        name: haproxy-auto
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
